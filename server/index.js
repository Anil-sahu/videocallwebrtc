const io = require('socket.io')(8080, {
    cors: {
        origin: '*',
    },
});

const users = {}; // Map user ID to socket connection

io.on('connection', (socket) => {
    console.log('New connection established');

    // Listen for registration
    socket.on('register', (data) => {
        const { callerId } = data;
        users[callerId] = socket;
        console.log(`User ${callerId} registered`);
    });

    // Listen for making a call
    // socket.on('makeCall', (data) => {

    //     const { calleeId, callerId, sdpOffer } = data;
    //     if (users[calleeId]) {
    //         users[calleeId].emit('newCall', { calleeId,callerId, sdpOffer });
    //     } else {
    //         console.log(`User ${calleeId} not found`);
    //     }
    // });
    socket.on('makeCall', (data) => {
        const { calleeId, callerId, sdpOffer } = data;

        if (users[calleeId]) {
            users[calleeId].emit('newCall', { callerId, calleeId, sdpOffer });
            console.log(`Call initiated from callerId: ${callerId} to calleeId: ${calleeId}`);
        } else {
            console.error(`Callee with ID ${calleeId} not found.`);
        }
    });
    // // Listen for answering a call
    // socket.on('answerCall', (data) => {
    //     const { callerId, calleeId, sdpAnswer } = data;
    //     console.log("callAnswered");
    //     console.log(users[callerId]);
    //     if (users[callerId]) {
    //         users[callerId].emit('callAnswered', { sdpAnswer });
    //     }
    // });
    socket.on('answerCall', (data) => {
        const { callerId, calleeId, sdpAnswer } = data;

        console.log(`Call answered by calleeId: ${calleeId} for callerId: ${callerId}`);

        if (users[callerId]) {
            users[callerId].emit('callAnswered', { sdpAnswer, calleeId });
            console.log(`SDP answer sent to callerId: ${callerId}`);
        } else {
            console.error(`Caller with ID ${callerId} not found.`);
        }
    });
    // Listen for answering a call
    // socket.on('answerCall', (data) => {
    //     const { callerId, calleeId, sdpAnswer } = data;

    //     console.log(`Call answered by calleeId: ${calleeId} for callerId: ${callerId}`);
    //     // console.log("Received SDP Answer: ", sdpAnswer);

    //     if (users[callerId]) {
    //         // Relay the answer to the caller
    //         users[callerId].emit('callAnswered', {
    //             sdpAnswer,  // The SDP answer generated by the callee
    //             calleeId,   // Optional: Provide callee's ID for frontend reference
    //         });
    //         console.log(`SDP answer sent to callerId: ${callerId}`);
    //     } else {
    //         console.error(`Caller with ID ${callerId} not found. Call cannot be answered.`);
    //     }
    // });


    // Listen for ICE candidates
    socket.on('IceCandidate', (data) => {
        const { calleeId, iceCandidate } = data;
        if (users[calleeId]) {
            users[calleeId].emit('IceCandidate', { iceCandidate });
        } else {
            console.log(`Callee ${calleeId} not found`);
        }
    });

    // Handle disconnect
    socket.on('disconnect', () => {
        for (let userId in users) {
            if (users[userId] === socket) {
                delete users[userId];
                console.log(`User ${userId} disconnected`);
                break;
            }
        }
    });
});

console.log('Socket.IO signaling server running on ws://localhost:8080');
